# docker-compose up -d
services:
  db:
    image: joniheikk/otp_db:latest
    pull_policy: always
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: otp_project
    volumes:
      - otp_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - otp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5

  backend:
    image: joniheikk/otp_backend:latest
    pull_policy: always
    container_name: backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/otp_project
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_ADDRESS: 0.0.0.0
      SERVER_PORT: 8081
    ports:
      - "8081:8081"
    networks:
      - otp_network
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: joniheikk/otp_frontend:latest
    pull_policy: always
    container_name: frontend
    environment:
      BACKEND_URL: http://backend:8081
    networks:
      - otp_network
    depends_on:
      - backend

volumes:
  otp_db_data:

networks:
  otp_network:
    driver: bridge
